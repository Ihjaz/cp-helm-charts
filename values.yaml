global:
  imagePullSecrets:
    - name: "reg-flex"
## ------------------------------------------------------
## Zookeeper
## ------------------------------------------------------
cp-zookeeper:
  enabled: true
  servers: 3
  image: flex-docker.forge.avaya.com/zookeeper
  imageTag: 1.0.0
  heapOptions: "-Xms256M -Xmx256M -Xss256k"
  persistence:
    enabled: true
    ## The size of the PersistentVolume to allocate to each Zookeeper Pod in the StatefulSet. For
    ## production servers this number should likely be much larger.
    ##
    ## Size for Data dir, where ZooKeeper will store the in-memory database snapshots.
    dataDirSize: 5Gi
    dataDirStorageClass: "zookeeper-storage"

    ## Size for data log dir, which is a dedicated log device to be used, and helps avoid competition between logging and snaphots.
    dataLogDirSize: 5Gi
    dataLogDirStorageClass: "zookeeper-storage"
  resources:
  ## If you do want to specify resources, uncomment the following lines, adjust them as necessary,
  ## and remove the curly braces after 'resources:'
    limits:
#     cpu: 200m
     memory: 512Mi
    requests:
#     cpu: 200m
     memory: 512Mi
  prometheus:
    jmx:
      image: flex-docker.forge.avaya.com/solsson-kafka-prometheus-jmx-exporter
      imageTag: 1.0.0

## ------------------------------------------------------
## Kafka
## ------------------------------------------------------
cp-kafka:
  enabled: true
  brokers: 3
  image: flex-docker.forge.avaya.com/kafka
  imageTag: 1.0.0
  sslEnabled: false
  saslEnabled: false
  heapOptions: "-Xms256M -Xmx256M -Xss256k"
  persistence:
    enabled: true
    storageClass: "kafka-storage"
    size: 25Gi
  resources:
  ## If you do want to specify resources, uncomment the following lines, adjust them as necessary,
  ## and remove the curly braces after 'resources:'
    limits:
  #   cpu: 100m
     memory: 2048Mi
    requests:
  #   cpu: 100m
     memory: 1024Mi
  nodeport:
    enabled: true
    servicePort: 19092
    firstListenerPort: 32090

  ## Kafka Server properties
  ## ref: https://kafka.apache.org/documentation/#configuration
  configurationOverrides:
    "log.dirs": /opt/kafka/data/logs
    "offsets.topic.replication.factor": 1
    "listener.security.protocol.map": |-
     PLAINTEXT:PLAINTEXT,EXTERNAL:PLAINTEXT
  sslConfigurationOverrides:
    "ssl.keystore.password": 123456
    "ssl.key.password": 123456
    "ssl.truststore.password": 123456
    "ssl.enabled.protocols": TLSv1.2
    "ssl.client.auth": requested
    "security.inter.broker.protocol": SSL
    "ssl.keystore.filename": server0.keystore.jks
    "ssl.key.credentials": password
    "ssl.truststore.filename": server.truststore.jks
    "ssl.truststore.credentials": password
    "ssl.keystore.credentials": password
    "ssl.endpoint.identification.algorithm":
    "listener.security.protocol.map": |-
     SSL:SSL,SSL_EXTERNAL:SSL
  saslConfigurationOverrides:
    "sasl.client.callback.handler.class": com.avaya.flex.eventing.kafka.auth.ClientAuthCallBackHandler
    "security.inter.broker.protocol": SASL_PLAINTEXT
    "sasl.mechanism.inter.broker.protocol": PLAIN
    "sasl.enabled.mechanisms": PLAIN
    "listener.name.sasl..plaintext.plain.sasl.server.callback.handler.class": com.avaya.flex.eventing.kafka.auth.ServerCallBackHandler
    "listener.name.sasl..external.plain.sasl.server.callback.handler.class": com.avaya.flex.eventing.kafka.auth.ServerCallBackHandler
    "listener.security.protocol.map": |-
     SASL_PLAINTEXT:SASL_PLAINTEXT,SASL_EXTERNAL:SASL_PLAINTEXT
  # "default.replication.factor": 3
  # "min.insync.replicas": 2
  # "auto.create.topics.enable": false
  prometheus:
    jmx:
      image: flex-docker.forge.avaya.com/solsson-kafka-prometheus-jmx-exporter
      imageTag: 1.0.0

## ------------------------------------------------------
## Schema Registry
## ------------------------------------------------------
cp-schema-registry:
  enabled: true
  ## This below image will be changed to the one Which will be of our own Avaya made
  image: flex-docker.forge.avaya.com/schema-registry
  imageTag: 1.0.0
  ## Optionally specify an array of imagePullSecrets. Secrets must be manually created in the namespace.
  ## https://kubernetes.io/docs/concepts/containers/images/#specifying-imagepullsecrets-on-a-pod
  imagePullSecrets:
  #  - name: "regcred"
  heapOptions: "-Xms512M -Xmx512M"
  resources: {}
  ## If you do want to specify resources, uncomment the following lines, adjust them as necessary,
  ## and remove the curly braces after 'resources:'
  #  limits:
  #   cpu: 100m
  #   memory: 128Mi
  #  requests:
  #   cpu: 100m
  #   memory: 128Mi

## ------------------------------------------------------
## REST Proxy
## ------------------------------------------------------
cp-kafka-rest:
  enabled: false
  image: confluentinc/cp-kafka-rest
  imageTag: 5.0.1
  ## Optionally specify an array of imagePullSecrets. Secrets must be manually created in the namespace.
  ## https://kubernetes.io/docs/concepts/containers/images/#specifying-imagepullsecrets-on-a-pod
  imagePullSecrets:
  #  - name: "regcred"
  heapOptions: "-Xms512M -Xmx512M"
  resources: {}
  ## If you do want to specify resources, uncomment the following lines, adjust them as necessary,
  ## and remove the curly braces after 'resources:'
  #  limits:
  #   cpu: 100m
  #   memory: 128Mi
  #  requests:
  #   cpu: 100m
  #   memory: 128Mi

## ------------------------------------------------------
## Kafka Connect
## ------------------------------------------------------
cp-kafka-connect:
  enabled: true
  image: flex-docker.forge.avaya.com/kafka-connect
  imageTag: 1.0.0
  ## Optionally specify an array of imagePullSecrets. Secrets must be manually created in the namespace.
  ## https://kubernetes.io/docs/concepts/containers/images/#specifying-imagepullsecrets-on-a-pod
  imagePullSecrets:
  #  - name: "regcred"
  heapOptions: "-Xms512M -Xmx512M"
  resources: {}
  ## If you do want to specify resources, uncomment the following lines, adjust them as necessary,
  ## and remove the curly braces after 'resources:'
  #  limits:
  #   cpu: 100m
  #   memory: 128Mi
  #  requests:
  #   cpu: 100m
  #   memory: 128Mi

## ------------------------------------------------------
## KSQL Server
## ------------------------------------------------------
cp-ksql-server:
  enabled: false
  image: confluentinc/cp-ksql-server
  imageTag: 5.0.1
  ## Optionally specify an array of imagePullSecrets. Secrets must be manually created in the namespace.
  ## https://kubernetes.io/docs/concepts/containers/images/#specifying-imagepullsecrets-on-a-pod
  imagePullSecrets:
  #  - name: "regcred"
  heapOptions: "-Xms512M -Xmx512M"
  ksql:
    headless: false
